Card Shuffler Service
=====================

Simple example of a card shuffling service using jax-rs, AutoValue, Jackson and RestEasy.  Also includes some basic
Swagger 2.x integration to expose the resource definitions.

# How to build

## Gradle Gradle Gradle

In order to build with gradle, this project uses the shadowJar task to build a jar with all the necessary
dependencies built in.  Running the following command will produce a shadowJar:
````
gradle shadowJar
````

# How to run

## Command Line

Once the shadow jar is built, the following command can be run to execute the jar:
````
java -jar ./card-shuffler-service/build/libs/card-shuffler-service-1.0-SNAPSHOT-all.jar
````

## In IntelliJ

Run the grade jar task, then you can proceed to run the Application class directly.

## Swagger

For more information on the service, when it is running you can access the following URL:
````
http://localhost:8080/swagger.json
````

for descriptive text on the available APIs.

# How to develop

The current build is setup for IntelliJ integration.  Eclipse integration could be added by using the Eclipse plugin.

## Notes

Currently in IntelliJ there is a defect around AutoValue generation with Gradle placing two versions of a generated
class, for classes generated by the apt plugin, onto the classpath.  The easiest way to work around this is to simply
delete the generated folder (this will allow you to utilize the built versions in the service package).  This allows
the code to build OK, but when you try to execute the Application class in the card-shuffler-service it can throw
a duplicate class error.  Deleting the generated classes folder will fix this, but introduce an error in the API
project which depends on the generated classes folder (not the build output folder, which contains the duplicates).

More familiarity with Gradle could probably help overcome this issue.
